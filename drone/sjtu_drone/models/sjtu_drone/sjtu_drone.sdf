<?xml version='1.0'?>
<sdf version='1.4'>
<model name='sjtu_drone'>
   <!-- model plugins should be put in the front of the sensor plugins! 
	This might be a bug~
	-->
    <plugin name='simple_drone' filename='libplugin_drone.so'>
        <bodyName>base_link</bodyName>
        <imuTopic>/drone/imu</imuTopic>
        <rollpitchProportionalGain>10.0</rollpitchProportionalGain>
        <rollpitchDifferentialGain>5.0</rollpitchDifferentialGain>
        <rollpitchLimit>0.5</rollpitchLimit>
        <yawProportionalGain>2.0</yawProportionalGain>
        <yawDifferentialGain>1.0</yawDifferentialGain>
        <yawLimit>1.5</yawLimit>
        <velocityXYProportionalGain>5.0</velocityXYProportionalGain>
        <velocityXYDifferentialGain>2.3</velocityXYDifferentialGain>
        <velocityXYLimit>2</velocityXYLimit>
        <velocityZProportionalGain>5.0</velocityZProportionalGain>
        <velocityZDifferentialGain>1.0</velocityZDifferentialGain>
        <velocityZLimit>-1</velocityZLimit>
        <positionXYProportionalGain>1.1</positionXYProportionalGain>
        <positionXYDifferentialGain>0.0</positionXYDifferentialGain>
        <positionXYIntegralGain>0.0</positionXYIntegralGain>
        <positionXYLimit>5</positionXYLimit>
        <positionZProportionalGain>1.0</positionZProportionalGain>
        <positionZDifferentialGain>0.2</positionZDifferentialGain>
        <positionZLimit>-1</positionZLimit>
        <maxForce>30</maxForce>
        <motionSmallNoise>0.05</motionSmallNoise>
        <motionDriftNoise>0.03</motionDriftNoise>
        <motionDriftNoiseTime>5.0</motionDriftNoiseTime>
    </plugin>

     <!-- pose of the quadrotor in the world frame -->
     <pose>0 0 0.04 0 0 0</pose>
      <link name='base_link'>
      <inertial>
        <mass>1.477</mass>
	<pose>0 0 0.04 0 0 0</pose>
	<inertia>
	<ixx>0.1152</ixx>
	<ixy>0</ixy>
	<ixz>0</ixz>
	<iyy>0.1152</iyy>
	<iyz>0</iyz>
	<izz>0.218</izz>

	</inertia>
      </inertial>

      <visual name='visual'>
        <geometry>
	      <mesh><uri>file://models/sjtu_drone/quadrotor_4.dae</uri></mesh>
        </geometry>
      </visual>

      <collision name='collision'>
        <geometry>
	      <mesh><uri>file://models/sjtu_drone/quadrotor_4.dae</uri></mesh>
        </geometry>
      </collision>

      <gravity>1</gravity>
    

     <!-- IMU sensor in 100fps -->
	<sensor name='sensor_imu' type='imu'>
	<always_on> 1 </always_on>
	<update_rate> 100 </update_rate>
  <pose> 0 0 0 0 3.14159265359 0 </pose>
	<plugin name='ros_imu' filename='libplugin_ros_imu.so'>
	</plugin> 
	<imu>
		<angular_velocity>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>0.8</stddev>
                <bias_mean>0.0000075</bias_mean>
                <bias_stddev>0.0000008</bias_stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>0.15</stddev>
                <bias_mean>0.0000075</bias_mean>
                <bias_stddev>0.0000008</bias_stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>0.24</stddev>
                <bias_mean>0.0000075</bias_mean>
                <bias_stddev>0.0000008</bias_stddev>
              </noise>
            </z>
          </angular_velocity>
          <linear_acceleration>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7</stddev>
                <bias_mean>0.1</bias_mean>
                <bias_stddev>0.001</bias_stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2.8</stddev>
                <bias_mean>0.1</bias_mean>
                <bias_stddev>0.001</bias_stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>4.2</stddev>
                <bias_mean>0.1</bias_mean>
                <bias_stddev>0.001</bias_stddev>
              </noise>
            </z>
          </linear_acceleration>>
	</imu>
	</sensor>


	<!-- front Sonar sensor -->
	<sensor name='front_sensor_sonar' type='sonar'>
	<always_on>1</always_on>
	<visualize>1</visualize>
	<update_rate>50</update_rate>
	<pose> 0.03 0 0.05 0 1.570796327 3.141592653 </pose>
	<plugin name='ros_sonar' filename='libplugin_ros_sonarx.so'>
	</plugin> 
	<sonar>
		<min>0</min>
		<max>4</max>
        	<radius>0.47123889803</radius>
  </sonar>
  </sensor>
 

   <!-- left Sonar sensor  -->
	<sensor name='left_sensor_sonar' type='sonar'>
	<always_on>1</always_on>
	<visualize>1</visualize>
	<update_rate>50</update_rate>
	<pose> 0.03 0 0.05 0 1.570796327 4.71238898038 </pose>
	<plugin name='ros_sonar3' filename='libplugin_ros_sonarxxxx.so'>
	</plugin> 
	<sonar>
		<min>0</min>
		<max>4</max>
        	<radius>0.47123889803</radius>
        </sonar>
        </sensor>     

    <!-- back Sonar sensor  -->
	<sensor name='back_sensor_sonar' type='sonar'>
	<always_on>1</always_on>
	<visualize>1</visualize>
	<update_rate>50</update_rate>
	<pose> 0.03 0 0.05 0 1.570796327 0 </pose>
	<plugin name='ros_sonar2' filename='libplugin_ros_sonarxxx.so'>
	</plugin> 
	<sonar>
		<min>0</min>
		<max>4</max>
        	<radius>0.47123889803</radius>
        </sonar>
        </sensor>  

   <!-- right Sonar sensor -->
	<sensor name='right_sensor_sonar' type='sonar'>
	<always_on>1</always_on>
	<visualize>1</visualize>
	<update_rate>50</update_rate>
	<pose> 0.03 0 0.05 0 1.570796327 1.570796327 </pose>
	<plugin name='ros_sonar1' filename='libplugin_ros_sonarxx.so'>
	</plugin> 
	<sonar>
		<min>0</min>
		<max>4</max>
        	<radius>0.47123889803</radius>
        </sonar>
        </sensor>                 

<!-- front camera -->
	<sensor name="hires" type="camera">
        <camera>
          <horizontal_fov>2.09</horizontal_fov>
          <image>
            <width>1920</width>
            <height>1440</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.1</near>
            <far>100</far>
          </clip>
          <distortion>
            <k1>0.1716413655141744</k1>
            <k2>-0.3183612256208302</k2>
            <k3>0</k3>
            <p1>-0.001807371305171423</p1>
            <p2>-0.003356564474863117</p2>

          </distortion>
        </camera>
	<pose> 0 0.0 0.12 0 0 0 </pose>
        <always_on>1</always_on>
        <update_rate>60</update_rate>
        <visualize>true</visualize>
	<plugin name='front_camera' filename='libplugin_ros_cam.so'>
	<!--plugin name='front_camera' filename='libGazeboCameraPlugin.so'-->
	<imageTopicName>/drone/hires/image_raw</imageTopicName>
	</plugin> 
      </sensor>

<!-- left camera -->
	<sensor name="left_camera" type="camera">
        <camera>
          <horizontal_fov>2.09</horizontal_fov>
          <image>
            <width>640</width>
            <height>480</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.1</near>
            <far>100</far>
          </clip>
          <distortion>
            <k1> 0.004020833229537</k1>
            <k3> -0.050374924003713</k3>
            <p1>0.004445265695631</p1>
            <p2>0.0000161366726292526</p2>
          </distortion>
        </camera>
	<pose> 0 0.04 0.12 0 0 0 </pose>
        <always_on>1</always_on>
        <update_rate>60</update_rate>
        <visualize>true</visualize>
	<plugin name='left_camera' filename='libplugin_ros_cam.so'>
	<imageTopicName>/drone/left_camera/image_raw</imageTopicName>
	</plugin>
      </sensor>

 <!-- right camera -->
	<sensor name="right_camera" type="camera">
        <camera>
          <horizontal_fov>2.09</horizontal_fov>
          <image>
            <width>640</width>
            <height>480</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.1</near>
            <far>100</far>
          </clip>
          <distortion>
            <k1>0.007765825677520</k1>
            <k3> -0.047098766733095</k3>
            <p1> 0.001213387370038</p1>
            <p2>-0.002442518923906</p2>
          </distortion>
        </camera>
	<pose> 0 -0.04 0.12 0 0 0 </pose>
        <always_on>1</always_on>
        <update_rate>60</update_rate>
        <visualize>true</visualize>
	<plugin name='right_camera' filename='libplugin_ros_cam.so'>
	<imageTopicName>/drone/right_camera/image_raw</imageTopicName>
	</plugin>
      </sensor>      


	<!-- downward looking camera -->
	<sensor name="down_camera" type="camera">
        <camera>
          <horizontal_fov>1.047</horizontal_fov>
          <image>
            <width>640</width>
            <height>480</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.1</near>
            <far>100</far>
          </clip>
          <lens>
            <type>gnomonical</type>
            <scale_to_hfov>true</scale_to_hfov>
            <cutoff_angle>1.5707</cutoff_angle>
            <env_texture_size>256</env_texture_size>
          </lens>
          <distortion>
            <k1>-0.2416898912705815</k1>
            <k3> 0.03814931289743689</k3>
            <p1> 0</p1>
            <p2>0 </p2>
          </distortion>
        </camera>
	<pose> 0.0 0.0 0.0 0 0.78539816339  0 </pose>
        <always_on>1</always_on>
        <update_rate>15</update_rate>
        <visualize>true</visualize>
	<plugin name='down_camera' filename='libplugin_ros_cam.so'>
	<imageTopicName>/drone/down_camera/image_raw</imageTopicName>
	</plugin> 
      </sensor>



     </link> 
</model>
</sdf>
